// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: product.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SmallProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title         string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Banner        string `protobuf:"bytes,3,opt,name=Banner,proto3" json:"Banner,omitempty"`
	Price         int64  `protobuf:"varint,4,opt,name=Price,proto3" json:"Price,omitempty"`
	DiscountPrice int64  `protobuf:"varint,5,opt,name=DiscountPrice,proto3" json:"DiscountPrice,omitempty"`
}

func (x *SmallProduct) Reset() {
	*x = SmallProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmallProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmallProduct) ProtoMessage() {}

func (x *SmallProduct) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmallProduct.ProtoReflect.Descriptor instead.
func (*SmallProduct) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{0}
}

func (x *SmallProduct) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *SmallProduct) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SmallProduct) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *SmallProduct) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SmallProduct) GetDiscountPrice() int64 {
	if x != nil {
		return x.DiscountPrice
	}
	return 0
}

type SmallSeckill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeckillID    int64  `protobuf:"varint,1,opt,name=SeckillID,proto3" json:"SeckillID,omitempty"`
	Title        string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Banner       string `protobuf:"bytes,3,opt,name=Banner,proto3" json:"Banner,omitempty"`
	SeckillPrice int64  `protobuf:"varint,4,opt,name=SeckillPrice,proto3" json:"SeckillPrice,omitempty"`
}

func (x *SmallSeckill) Reset() {
	*x = SmallSeckill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmallSeckill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmallSeckill) ProtoMessage() {}

func (x *SmallSeckill) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmallSeckill.ProtoReflect.Descriptor instead.
func (*SmallSeckill) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{1}
}

func (x *SmallSeckill) GetSeckillID() int64 {
	if x != nil {
		return x.SeckillID
	}
	return 0
}

func (x *SmallSeckill) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SmallSeckill) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *SmallSeckill) GetSeckillPrice() int64 {
	if x != nil {
		return x.SeckillPrice
	}
	return 0
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CategoryID    int64  `protobuf:"varint,2,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"`
	Title         string `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	SubTitle      string `protobuf:"bytes,4,opt,name=SubTitle,proto3" json:"SubTitle,omitempty"`
	Banner        string `protobuf:"bytes,5,opt,name=Banner,proto3" json:"Banner,omitempty"`
	Introduction  string `protobuf:"bytes,6,opt,name=Introduction,proto3" json:"Introduction,omitempty"`
	Price         int64  `protobuf:"varint,7,opt,name=Price,proto3" json:"Price,omitempty"`
	DiscountPrice int64  `protobuf:"varint,8,opt,name=DiscountPrice,proto3" json:"DiscountPrice,omitempty"`
	OnSale        int64  `protobuf:"varint,9,opt,name=OnSale,proto3" json:"OnSale,omitempty"`
	SellCount     int64  `protobuf:"varint,10,opt,name=SellCount,proto3" json:"SellCount,omitempty"`
	CommentCount  int64  `protobuf:"varint,11,opt,name=CommentCount,proto3" json:"CommentCount,omitempty"`
	StoreID       int64  `protobuf:"varint,12,opt,name=StoreID,proto3" json:"StoreID,omitempty"`
	BossID        int64  `protobuf:"varint,13,opt,name=BossID,proto3" json:"BossID,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{2}
}

func (x *Product) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Product) GetCategoryID() int64 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *Product) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Product) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *Product) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *Product) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *Product) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Product) GetDiscountPrice() int64 {
	if x != nil {
		return x.DiscountPrice
	}
	return 0
}

func (x *Product) GetOnSale() int64 {
	if x != nil {
		return x.OnSale
	}
	return 0
}

func (x *Product) GetSellCount() int64 {
	if x != nil {
		return x.SellCount
	}
	return 0
}

func (x *Product) GetCommentCount() int64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *Product) GetStoreID() int64 {
	if x != nil {
		return x.StoreID
	}
	return 0
}

func (x *Product) GetBossID() int64 {
	if x != nil {
		return x.BossID
	}
	return 0
}

type SeckillProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ProductID     int64  `protobuf:"varint,2,opt,name=ProductID,proto3" json:"ProductID,omitempty"`
	CategoryID    int64  `protobuf:"varint,3,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"`
	Title         string `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	SubTitle      string `protobuf:"bytes,5,opt,name=SubTitle,proto3" json:"SubTitle,omitempty"`
	Banner        string `protobuf:"bytes,6,opt,name=Banner,proto3" json:"Banner,omitempty"`
	Introduction  string `protobuf:"bytes,7,opt,name=Introduction,proto3" json:"Introduction,omitempty"`
	Price         int64  `protobuf:"varint,8,opt,name=Price,proto3" json:"Price,omitempty"`
	DiscountPrice int64  `protobuf:"varint,9,opt,name=DiscountPrice,proto3" json:"DiscountPrice,omitempty"`
	OnSale        int64  `protobuf:"varint,10,opt,name=OnSale,proto3" json:"OnSale,omitempty"`
	SellCount     int64  `protobuf:"varint,11,opt,name=SellCount,proto3" json:"SellCount,omitempty"`
	CommentCount  int64  `protobuf:"varint,12,opt,name=CommentCount,proto3" json:"CommentCount,omitempty"`
	StoreID       int64  `protobuf:"varint,13,opt,name=StoreID,proto3" json:"StoreID,omitempty"`
	BossID        int64  `protobuf:"varint,14,opt,name=BossID,proto3" json:"BossID,omitempty"`
	SeckillPrice  int64  `protobuf:"varint,15,opt,name=SeckillPrice,proto3" json:"SeckillPrice,omitempty"`
	SeckillCount  int64  `protobuf:"varint,16,opt,name=SeckillCount,proto3" json:"SeckillCount,omitempty"`
	StartTime     string `protobuf:"bytes,17,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	Time          int64  `protobuf:"varint,18,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *SeckillProduct) Reset() {
	*x = SeckillProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeckillProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeckillProduct) ProtoMessage() {}

func (x *SeckillProduct) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeckillProduct.ProtoReflect.Descriptor instead.
func (*SeckillProduct) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{3}
}

func (x *SeckillProduct) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *SeckillProduct) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *SeckillProduct) GetCategoryID() int64 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *SeckillProduct) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SeckillProduct) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *SeckillProduct) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *SeckillProduct) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *SeckillProduct) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SeckillProduct) GetDiscountPrice() int64 {
	if x != nil {
		return x.DiscountPrice
	}
	return 0
}

func (x *SeckillProduct) GetOnSale() int64 {
	if x != nil {
		return x.OnSale
	}
	return 0
}

func (x *SeckillProduct) GetSellCount() int64 {
	if x != nil {
		return x.SellCount
	}
	return 0
}

func (x *SeckillProduct) GetCommentCount() int64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *SeckillProduct) GetStoreID() int64 {
	if x != nil {
		return x.StoreID
	}
	return 0
}

func (x *SeckillProduct) GetBossID() int64 {
	if x != nil {
		return x.BossID
	}
	return 0
}

func (x *SeckillProduct) GetSeckillPrice() int64 {
	if x != nil {
		return x.SeckillPrice
	}
	return 0
}

func (x *SeckillProduct) GetSeckillCount() int64 {
	if x != nil {
		return x.SeckillCount
	}
	return 0
}

func (x *SeckillProduct) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *SeckillProduct) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserID     int64  `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ProductID  int64  `protobuf:"varint,3,opt,name=ProductID,proto3" json:"ProductID,omitempty"`
	IsGood     int64  `protobuf:"varint,4,opt,name=IsGood,proto3" json:"IsGood,omitempty"`
	Content    string `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`
	AddContent string `protobuf:"bytes,6,opt,name=AddContent,proto3" json:"AddContent,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{4}
}

func (x *Comment) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Comment) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Comment) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *Comment) GetIsGood() int64 {
	if x != nil {
		return x.IsGood
	}
	return 0
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetAddContent() string {
	if x != nil {
		return x.AddContent
	}
	return ""
}

type Carousel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID int64  `protobuf:"varint,1,opt,name=ProductID,proto3" json:"ProductID,omitempty"`
	ImgPath   string `protobuf:"bytes,2,opt,name=ImgPath,proto3" json:"ImgPath,omitempty"`
}

func (x *Carousel) Reset() {
	*x = Carousel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Carousel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Carousel) ProtoMessage() {}

func (x *Carousel) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Carousel.ProtoReflect.Descriptor instead.
func (*Carousel) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{5}
}

func (x *Carousel) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *Carousel) GetImgPath() string {
	if x != nil {
		return x.ImgPath
	}
	return ""
}

type CarouselReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CarouselReq) Reset() {
	*x = CarouselReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarouselReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarouselReq) ProtoMessage() {}

func (x *CarouselReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarouselReq.ProtoReflect.Descriptor instead.
func (*CarouselReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{6}
}

type CarouselResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Carousels []*Carousel `protobuf:"bytes,1,rep,name=Carousels,proto3" json:"Carousels,omitempty"`
}

func (x *CarouselResp) Reset() {
	*x = CarouselResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarouselResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarouselResp) ProtoMessage() {}

func (x *CarouselResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarouselResp.ProtoReflect.Descriptor instead.
func (*CarouselResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{7}
}

func (x *CarouselResp) GetCarousels() []*Carousel {
	if x != nil {
		return x.Carousels
	}
	return nil
}

type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{8}
}

func (x *Category) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CategoryListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CategoryListReq) Reset() {
	*x = CategoryListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryListReq) ProtoMessage() {}

func (x *CategoryListReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryListReq.ProtoReflect.Descriptor instead.
func (*CategoryListReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{9}
}

type CategoryListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories []*Category `protobuf:"bytes,1,rep,name=Categories,proto3" json:"Categories,omitempty"`
}

func (x *CategoryListResp) Reset() {
	*x = CategoryListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryListResp) ProtoMessage() {}

func (x *CategoryListResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryListResp.ProtoReflect.Descriptor instead.
func (*CategoryListResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{10}
}

func (x *CategoryListResp) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

type RecommendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RecommendReq) Reset() {
	*x = RecommendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendReq) ProtoMessage() {}

func (x *RecommendReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendReq.ProtoReflect.Descriptor instead.
func (*RecommendReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{11}
}

type RecommendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SmallProducts []*SmallProduct `protobuf:"bytes,1,rep,name=SmallProducts,proto3" json:"SmallProducts,omitempty"`
}

func (x *RecommendResp) Reset() {
	*x = RecommendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendResp) ProtoMessage() {}

func (x *RecommendResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendResp.ProtoReflect.Descriptor instead.
func (*RecommendResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{12}
}

func (x *RecommendResp) GetSmallProducts() []*SmallProduct {
	if x != nil {
		return x.SmallProducts
	}
	return nil
}

type SearchProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword    string `protobuf:"bytes,1,opt,name=Keyword,proto3" json:"Keyword,omitempty"`
	Sort       string `protobuf:"bytes,2,opt,name=Sort,proto3" json:"Sort,omitempty"`
	OnSale     int64  `protobuf:"varint,3,opt,name=OnSale,proto3" json:"OnSale,omitempty"`
	CategoryID int64  `protobuf:"varint,4,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"`
	Page       int64  `protobuf:"varint,5,opt,name=Page,proto3" json:"Page,omitempty"`
	Size       int64  `protobuf:"varint,6,opt,name=Size,proto3" json:"Size,omitempty"`
}

func (x *SearchProductReq) Reset() {
	*x = SearchProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProductReq) ProtoMessage() {}

func (x *SearchProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProductReq.ProtoReflect.Descriptor instead.
func (*SearchProductReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{13}
}

func (x *SearchProductReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchProductReq) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *SearchProductReq) GetOnSale() int64 {
	if x != nil {
		return x.OnSale
	}
	return 0
}

func (x *SearchProductReq) GetCategoryID() int64 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *SearchProductReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchProductReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type SearchProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SmallProducts []*SmallProduct `protobuf:"bytes,1,rep,name=SmallProducts,proto3" json:"SmallProducts,omitempty"`
}

func (x *SearchProductResp) Reset() {
	*x = SearchProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProductResp) ProtoMessage() {}

func (x *SearchProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProductResp.ProtoReflect.Descriptor instead.
func (*SearchProductResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{14}
}

func (x *SearchProductResp) GetSmallProducts() []*SmallProduct {
	if x != nil {
		return x.SmallProducts
	}
	return nil
}

type CategoryProductListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryID int64  `protobuf:"varint,1,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"`
	Sort       string `protobuf:"bytes,2,opt,name=Sort,proto3" json:"Sort,omitempty"`
	Page       int64  `protobuf:"varint,3,opt,name=Page,proto3" json:"Page,omitempty"`
	Size       int64  `protobuf:"varint,4,opt,name=Size,proto3" json:"Size,omitempty"`
}

func (x *CategoryProductListReq) Reset() {
	*x = CategoryProductListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryProductListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryProductListReq) ProtoMessage() {}

func (x *CategoryProductListReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryProductListReq.ProtoReflect.Descriptor instead.
func (*CategoryProductListReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{15}
}

func (x *CategoryProductListReq) GetCategoryID() int64 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *CategoryProductListReq) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *CategoryProductListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CategoryProductListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CategoryProductListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SmallProducts []*SmallProduct `protobuf:"bytes,1,rep,name=SmallProducts,proto3" json:"SmallProducts,omitempty"`
}

func (x *CategoryProductListResp) Reset() {
	*x = CategoryProductListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryProductListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryProductListResp) ProtoMessage() {}

func (x *CategoryProductListResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryProductListResp.ProtoReflect.Descriptor instead.
func (*CategoryProductListResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{16}
}

func (x *CategoryProductListResp) GetSmallProducts() []*SmallProduct {
	if x != nil {
		return x.SmallProducts
	}
	return nil
}

type ProductDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID int64 `protobuf:"varint,1,opt,name=ProductID,proto3" json:"ProductID,omitempty"`
}

func (x *ProductDetailReq) Reset() {
	*x = ProductDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDetailReq) ProtoMessage() {}

func (x *ProductDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDetailReq.ProtoReflect.Descriptor instead.
func (*ProductDetailReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{17}
}

func (x *ProductDetailReq) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

type ProductDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product *Product `protobuf:"bytes,1,opt,name=Product,proto3" json:"Product,omitempty"`
}

func (x *ProductDetailResp) Reset() {
	*x = ProductDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDetailResp) ProtoMessage() {}

func (x *ProductDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDetailResp.ProtoReflect.Descriptor instead.
func (*ProductDetailResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{18}
}

func (x *ProductDetailResp) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

type ProductCommentListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID int64 `protobuf:"varint,1,opt,name=ProductID,proto3" json:"ProductID,omitempty"`
	Page      int64 `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	Size      int64 `protobuf:"varint,3,opt,name=Size,proto3" json:"Size,omitempty"`
}

func (x *ProductCommentListReq) Reset() {
	*x = ProductCommentListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCommentListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCommentListReq) ProtoMessage() {}

func (x *ProductCommentListReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCommentListReq.ProtoReflect.Descriptor instead.
func (*ProductCommentListReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{19}
}

func (x *ProductCommentListReq) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *ProductCommentListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ProductCommentListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ProductCommentListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments []*Comment `protobuf:"bytes,1,rep,name=Comments,proto3" json:"Comments,omitempty"`
}

func (x *ProductCommentListResp) Reset() {
	*x = ProductCommentListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCommentListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCommentListResp) ProtoMessage() {}

func (x *ProductCommentListResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCommentListResp.ProtoReflect.Descriptor instead.
func (*ProductCommentListResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{20}
}

func (x *ProductCommentListResp) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type CreateProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryID   int64  `protobuf:"varint,1,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"`
	Title        string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	SubTitle     string `protobuf:"bytes,3,opt,name=SubTitle,proto3" json:"SubTitle,omitempty"`
	Banner       string `protobuf:"bytes,4,opt,name=Banner,proto3" json:"Banner,omitempty"`
	Introduction string `protobuf:"bytes,5,opt,name=Introduction,proto3" json:"Introduction,omitempty"`
	Price        int64  `protobuf:"varint,6,opt,name=Price,proto3" json:"Price,omitempty"`
	OnSale       int64  `protobuf:"varint,7,opt,name=OnSale,proto3" json:"OnSale,omitempty"`
	Stock        int64  `protobuf:"varint,8,opt,name=Stock,proto3" json:"Stock,omitempty"`
	StoreID      int64  `protobuf:"varint,9,opt,name=StoreID,proto3" json:"StoreID,omitempty"`
	BossID       int64  `protobuf:"varint,10,opt,name=BossID,proto3" json:"BossID,omitempty"`
}

func (x *CreateProductReq) Reset() {
	*x = CreateProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductReq) ProtoMessage() {}

func (x *CreateProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductReq.ProtoReflect.Descriptor instead.
func (*CreateProductReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{21}
}

func (x *CreateProductReq) GetCategoryID() int64 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *CreateProductReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateProductReq) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *CreateProductReq) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *CreateProductReq) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *CreateProductReq) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateProductReq) GetOnSale() int64 {
	if x != nil {
		return x.OnSale
	}
	return 0
}

func (x *CreateProductReq) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *CreateProductReq) GetStoreID() int64 {
	if x != nil {
		return x.StoreID
	}
	return 0
}

func (x *CreateProductReq) GetBossID() int64 {
	if x != nil {
		return x.BossID
	}
	return 0
}

type CreateProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateProductResp) Reset() {
	*x = CreateProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductResp) ProtoMessage() {}

func (x *CreateProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductResp.ProtoReflect.Descriptor instead.
func (*CreateProductResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{22}
}

type ShelfProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductIDs []int64 `protobuf:"varint,1,rep,packed,name=ProductIDs,proto3" json:"ProductIDs,omitempty"`
	BossID     int64   `protobuf:"varint,2,opt,name=BossID,proto3" json:"BossID,omitempty"`
}

func (x *ShelfProductReq) Reset() {
	*x = ShelfProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShelfProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShelfProductReq) ProtoMessage() {}

func (x *ShelfProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShelfProductReq.ProtoReflect.Descriptor instead.
func (*ShelfProductReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{23}
}

func (x *ShelfProductReq) GetProductIDs() []int64 {
	if x != nil {
		return x.ProductIDs
	}
	return nil
}

func (x *ShelfProductReq) GetBossID() int64 {
	if x != nil {
		return x.BossID
	}
	return 0
}

type ShelfProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShelfProductResp) Reset() {
	*x = ShelfProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShelfProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShelfProductResp) ProtoMessage() {}

func (x *ShelfProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShelfProductResp.ProtoReflect.Descriptor instead.
func (*ShelfProductResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{24}
}

type UpdateProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID     int64  `protobuf:"varint,1,opt,name=ProductID,proto3" json:"ProductID,omitempty"`
	CategoryID    int64  `protobuf:"varint,2,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"`
	Title         string `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	SubTitle      string `protobuf:"bytes,4,opt,name=SubTitle,proto3" json:"SubTitle,omitempty"`
	Banner        string `protobuf:"bytes,5,opt,name=Banner,proto3" json:"Banner,omitempty"`
	Introduction  string `protobuf:"bytes,6,opt,name=Introduction,proto3" json:"Introduction,omitempty"`
	Price         int64  `protobuf:"varint,7,opt,name=Price,proto3" json:"Price,omitempty"`
	DiscountPrice int64  `protobuf:"varint,8,opt,name=DiscountPrice,proto3" json:"DiscountPrice,omitempty"`
	OnSale        int64  `protobuf:"varint,9,opt,name=OnSale,proto3" json:"OnSale,omitempty"`
	Stock         int64  `protobuf:"varint,10,opt,name=Stock,proto3" json:"Stock,omitempty"`
	BossID        int64  `protobuf:"varint,11,opt,name=BossID,proto3" json:"BossID,omitempty"`
}

func (x *UpdateProductReq) Reset() {
	*x = UpdateProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductReq) ProtoMessage() {}

func (x *UpdateProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductReq.ProtoReflect.Descriptor instead.
func (*UpdateProductReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateProductReq) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *UpdateProductReq) GetCategoryID() int64 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *UpdateProductReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateProductReq) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *UpdateProductReq) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *UpdateProductReq) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *UpdateProductReq) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UpdateProductReq) GetDiscountPrice() int64 {
	if x != nil {
		return x.DiscountPrice
	}
	return 0
}

func (x *UpdateProductReq) GetOnSale() int64 {
	if x != nil {
		return x.OnSale
	}
	return 0
}

func (x *UpdateProductReq) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *UpdateProductReq) GetBossID() int64 {
	if x != nil {
		return x.BossID
	}
	return 0
}

type UpdateProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateProductResp) Reset() {
	*x = UpdateProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductResp) ProtoMessage() {}

func (x *UpdateProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductResp.ProtoReflect.Descriptor instead.
func (*UpdateProductResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{26}
}

type SoldoutProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductIDs []int64 `protobuf:"varint,1,rep,packed,name=ProductIDs,proto3" json:"ProductIDs,omitempty"`
	BossID     int64   `protobuf:"varint,2,opt,name=BossID,proto3" json:"BossID,omitempty"`
}

func (x *SoldoutProductReq) Reset() {
	*x = SoldoutProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoldoutProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoldoutProductReq) ProtoMessage() {}

func (x *SoldoutProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoldoutProductReq.ProtoReflect.Descriptor instead.
func (*SoldoutProductReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{27}
}

func (x *SoldoutProductReq) GetProductIDs() []int64 {
	if x != nil {
		return x.ProductIDs
	}
	return nil
}

func (x *SoldoutProductReq) GetBossID() int64 {
	if x != nil {
		return x.BossID
	}
	return 0
}

type SoldoutProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SoldoutProductResp) Reset() {
	*x = SoldoutProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoldoutProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoldoutProductResp) ProtoMessage() {}

func (x *SoldoutProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoldoutProductResp.ProtoReflect.Descriptor instead.
func (*SoldoutProductResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{28}
}

type DeleteProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductIDs []int64 `protobuf:"varint,1,rep,packed,name=ProductIDs,proto3" json:"ProductIDs,omitempty"`
	BossID     int64   `protobuf:"varint,2,opt,name=BossID,proto3" json:"BossID,omitempty"`
}

func (x *DeleteProductReq) Reset() {
	*x = DeleteProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductReq) ProtoMessage() {}

func (x *DeleteProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductReq.ProtoReflect.Descriptor instead.
func (*DeleteProductReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteProductReq) GetProductIDs() []int64 {
	if x != nil {
		return x.ProductIDs
	}
	return nil
}

func (x *DeleteProductReq) GetBossID() int64 {
	if x != nil {
		return x.BossID
	}
	return 0
}

type DeleteProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProductResp) Reset() {
	*x = DeleteProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductResp) ProtoMessage() {}

func (x *DeleteProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductResp.ProtoReflect.Descriptor instead.
func (*DeleteProductResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{30}
}

type CreateSeckillReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID    int64  `protobuf:"varint,1,opt,name=ProductID,proto3" json:"ProductID,omitempty"`
	StoreID      int64  `protobuf:"varint,2,opt,name=StoreID,proto3" json:"StoreID,omitempty"`
	SeckillPrice int64  `protobuf:"varint,3,opt,name=SeckillPrice,proto3" json:"SeckillPrice,omitempty"`
	StockCount   int64  `protobuf:"varint,4,opt,name=StockCount,proto3" json:"StockCount,omitempty"`
	StartTime    string `protobuf:"bytes,5,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	Time         int64  `protobuf:"varint,6,opt,name=Time,proto3" json:"Time,omitempty"`
	BossID       int64  `protobuf:"varint,7,opt,name=BossID,proto3" json:"BossID,omitempty"`
}

func (x *CreateSeckillReq) Reset() {
	*x = CreateSeckillReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSeckillReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSeckillReq) ProtoMessage() {}

func (x *CreateSeckillReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSeckillReq.ProtoReflect.Descriptor instead.
func (*CreateSeckillReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{31}
}

func (x *CreateSeckillReq) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *CreateSeckillReq) GetStoreID() int64 {
	if x != nil {
		return x.StoreID
	}
	return 0
}

func (x *CreateSeckillReq) GetSeckillPrice() int64 {
	if x != nil {
		return x.SeckillPrice
	}
	return 0
}

func (x *CreateSeckillReq) GetStockCount() int64 {
	if x != nil {
		return x.StockCount
	}
	return 0
}

func (x *CreateSeckillReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *CreateSeckillReq) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *CreateSeckillReq) GetBossID() int64 {
	if x != nil {
		return x.BossID
	}
	return 0
}

type CreateSeckillResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateSeckillResp) Reset() {
	*x = CreateSeckillResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSeckillResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSeckillResp) ProtoMessage() {}

func (x *CreateSeckillResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSeckillResp.ProtoReflect.Descriptor instead.
func (*CreateSeckillResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{32}
}

type DeleteSeckillReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeckillID int64 `protobuf:"varint,1,opt,name=SeckillID,proto3" json:"SeckillID,omitempty"`
	BossID    int64 `protobuf:"varint,2,opt,name=BossID,proto3" json:"BossID,omitempty"`
}

func (x *DeleteSeckillReq) Reset() {
	*x = DeleteSeckillReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSeckillReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSeckillReq) ProtoMessage() {}

func (x *DeleteSeckillReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSeckillReq.ProtoReflect.Descriptor instead.
func (*DeleteSeckillReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteSeckillReq) GetSeckillID() int64 {
	if x != nil {
		return x.SeckillID
	}
	return 0
}

func (x *DeleteSeckillReq) GetBossID() int64 {
	if x != nil {
		return x.BossID
	}
	return 0
}

type DeleteSeckillResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSeckillResp) Reset() {
	*x = DeleteSeckillResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSeckillResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSeckillResp) ProtoMessage() {}

func (x *DeleteSeckillResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSeckillResp.ProtoReflect.Descriptor instead.
func (*DeleteSeckillResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{34}
}

type CreateCollectProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID int64 `protobuf:"varint,1,opt,name=ProductID,proto3" json:"ProductID,omitempty"`
	UserID    int64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *CreateCollectProductReq) Reset() {
	*x = CreateCollectProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCollectProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectProductReq) ProtoMessage() {}

func (x *CreateCollectProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectProductReq.ProtoReflect.Descriptor instead.
func (*CreateCollectProductReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{35}
}

func (x *CreateCollectProductReq) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *CreateCollectProductReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type CreateCollectProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateCollectProductResp) Reset() {
	*x = CreateCollectProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCollectProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectProductResp) ProtoMessage() {}

func (x *CreateCollectProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectProductResp.ProtoReflect.Descriptor instead.
func (*CreateCollectProductResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{36}
}

type CollectProductListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *CollectProductListReq) Reset() {
	*x = CollectProductListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectProductListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectProductListReq) ProtoMessage() {}

func (x *CollectProductListReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectProductListReq.ProtoReflect.Descriptor instead.
func (*CollectProductListReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{37}
}

func (x *CollectProductListReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type CollectProductListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []*SmallProduct `protobuf:"bytes,1,rep,name=Products,proto3" json:"Products,omitempty"`
}

func (x *CollectProductListResp) Reset() {
	*x = CollectProductListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectProductListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectProductListResp) ProtoMessage() {}

func (x *CollectProductListResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectProductListResp.ProtoReflect.Descriptor instead.
func (*CollectProductListResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{38}
}

func (x *CollectProductListResp) GetProducts() []*SmallProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

type DeleteCollectProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ProductID int64 `protobuf:"varint,2,opt,name=ProductID,proto3" json:"ProductID,omitempty"`
}

func (x *DeleteCollectProductReq) Reset() {
	*x = DeleteCollectProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCollectProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCollectProductReq) ProtoMessage() {}

func (x *DeleteCollectProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCollectProductReq.ProtoReflect.Descriptor instead.
func (*DeleteCollectProductReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteCollectProductReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *DeleteCollectProductReq) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

type DeleteCollectProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCollectProductResp) Reset() {
	*x = DeleteCollectProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCollectProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCollectProductResp) ProtoMessage() {}

func (x *DeleteCollectProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCollectProductResp.ProtoReflect.Descriptor instead.
func (*DeleteCollectProductResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{40}
}

type SeckillListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	Time      int64  `protobuf:"varint,2,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *SeckillListReq) Reset() {
	*x = SeckillListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeckillListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeckillListReq) ProtoMessage() {}

func (x *SeckillListReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeckillListReq.ProtoReflect.Descriptor instead.
func (*SeckillListReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{41}
}

func (x *SeckillListReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *SeckillListReq) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type SeckillListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeckillList []*SmallSeckill `protobuf:"bytes,1,rep,name=SeckillList,proto3" json:"SeckillList,omitempty"`
}

func (x *SeckillListResp) Reset() {
	*x = SeckillListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeckillListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeckillListResp) ProtoMessage() {}

func (x *SeckillListResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeckillListResp.ProtoReflect.Descriptor instead.
func (*SeckillListResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{42}
}

func (x *SeckillListResp) GetSeckillList() []*SmallSeckill {
	if x != nil {
		return x.SeckillList
	}
	return nil
}

type SeckillDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeckillID int64 `protobuf:"varint,1,opt,name=SeckillID,proto3" json:"SeckillID,omitempty"`
}

func (x *SeckillDetailReq) Reset() {
	*x = SeckillDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeckillDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeckillDetailReq) ProtoMessage() {}

func (x *SeckillDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeckillDetailReq.ProtoReflect.Descriptor instead.
func (*SeckillDetailReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{43}
}

func (x *SeckillDetailReq) GetSeckillID() int64 {
	if x != nil {
		return x.SeckillID
	}
	return 0
}

type SeckillDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product *SeckillProduct `protobuf:"bytes,1,opt,name=Product,proto3" json:"Product,omitempty"`
}

func (x *SeckillDetailResp) Reset() {
	*x = SeckillDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeckillDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeckillDetailResp) ProtoMessage() {}

func (x *SeckillDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeckillDetailResp.ProtoReflect.Descriptor instead.
func (*SeckillDetailResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{44}
}

func (x *SeckillDetailResp) GetProduct() *SeckillProduct {
	if x != nil {
		return x.Product
	}
	return nil
}

type CheckProductExistsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID int64 `protobuf:"varint,1,opt,name=ProductID,proto3" json:"ProductID,omitempty"`
}

func (x *CheckProductExistsReq) Reset() {
	*x = CheckProductExistsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckProductExistsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckProductExistsReq) ProtoMessage() {}

func (x *CheckProductExistsReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckProductExistsReq.ProtoReflect.Descriptor instead.
func (*CheckProductExistsReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{45}
}

func (x *CheckProductExistsReq) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

type CheckProductExistsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsExists bool `protobuf:"varint,1,opt,name=IsExists,proto3" json:"IsExists,omitempty"`
}

func (x *CheckProductExistsResp) Reset() {
	*x = CheckProductExistsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckProductExistsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckProductExistsResp) ProtoMessage() {}

func (x *CheckProductExistsResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckProductExistsResp.ProtoReflect.Descriptor instead.
func (*CheckProductExistsResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{46}
}

func (x *CheckProductExistsResp) GetIsExists() bool {
	if x != nil {
		return x.IsExists
	}
	return false
}

type CheckSeckillExistsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeckillID int64 `protobuf:"varint,1,opt,name=SeckillID,proto3" json:"SeckillID,omitempty"`
}

func (x *CheckSeckillExistsReq) Reset() {
	*x = CheckSeckillExistsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckSeckillExistsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSeckillExistsReq) ProtoMessage() {}

func (x *CheckSeckillExistsReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSeckillExistsReq.ProtoReflect.Descriptor instead.
func (*CheckSeckillExistsReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{47}
}

func (x *CheckSeckillExistsReq) GetSeckillID() int64 {
	if x != nil {
		return x.SeckillID
	}
	return 0
}

type CheckSeckillExistsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsExists bool `protobuf:"varint,1,opt,name=IsExists,proto3" json:"IsExists,omitempty"`
}

func (x *CheckSeckillExistsResp) Reset() {
	*x = CheckSeckillExistsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckSeckillExistsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSeckillExistsResp) ProtoMessage() {}

func (x *CheckSeckillExistsResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSeckillExistsResp.ProtoReflect.Descriptor instead.
func (*CheckSeckillExistsResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{48}
}

func (x *CheckSeckillExistsResp) GetIsExists() bool {
	if x != nil {
		return x.IsExists
	}
	return false
}

type GetProductListByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IDList []int64 `protobuf:"varint,1,rep,packed,name=IDList,proto3" json:"IDList,omitempty"`
}

func (x *GetProductListByIDReq) Reset() {
	*x = GetProductListByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductListByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductListByIDReq) ProtoMessage() {}

func (x *GetProductListByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductListByIDReq.ProtoReflect.Descriptor instead.
func (*GetProductListByIDReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{49}
}

func (x *GetProductListByIDReq) GetIDList() []int64 {
	if x != nil {
		return x.IDList
	}
	return nil
}

type GetProductListByIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductList []*SmallProduct `protobuf:"bytes,1,rep,name=ProductList,proto3" json:"ProductList,omitempty"`
}

func (x *GetProductListByIDResp) Reset() {
	*x = GetProductListByIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductListByIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductListByIDResp) ProtoMessage() {}

func (x *GetProductListByIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductListByIDResp.ProtoReflect.Descriptor instead.
func (*GetProductListByIDResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{50}
}

func (x *GetProductListByIDResp) GetProductList() []*SmallProduct {
	if x != nil {
		return x.ProductList
	}
	return nil
}

var File_product_proto protoreflect.FileDescriptor

var file_product_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x22, 0x88, 0x01, 0x0a, 0x0c, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x7e,
	0x0a, 0x0c, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65,
	0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xef,
	0x02, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x6e, 0x74, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x53, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x6f, 0x73, 0x73,
	0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x42, 0x6f, 0x73, 0x73, 0x49, 0x44,
	0x22, 0x8e, 0x04, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x75, 0x62, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x49,
	0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4f,
	0x6e, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4f, 0x6e, 0x53,
	0x61, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x42, 0x6f, 0x73, 0x73, 0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x42, 0x6f, 0x73, 0x73, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x63, 0x6b, 0x69,
	0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x53,
	0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x53,
	0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0xa1, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x47, 0x6f, 0x6f, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x49, 0x73, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x6f, 0x75, 0x73, 0x65,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x49, 0x6d, 0x67, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x49, 0x6d, 0x67, 0x50, 0x61, 0x74, 0x68, 0x22, 0x0d, 0x0a, 0x0b, 0x43, 0x61, 0x72,
	0x6f, 0x75, 0x73, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x22, 0x3a, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x6f,
	0x75, 0x73, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x6f,
	0x75, 0x73, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x61, 0x72, 0x6f, 0x75, 0x73, 0x65, 0x6c, 0x52, 0x09, 0x43, 0x61, 0x72, 0x6f, 0x75,
	0x73, 0x65, 0x6c, 0x73, 0x22, 0x2e, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x40, 0x0a, 0x10, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x0a, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x22, 0x47, 0x0a, 0x0d, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0d, 0x53, 0x6d,
	0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x0d, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4b, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0d, 0x53, 0x6d,
	0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x0d, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x22, 0x74, 0x0a, 0x16, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x53, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x51, 0x0a, 0x17, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0d, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x0d, 0x53, 0x6d,
	0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x30, 0x0a, 0x10, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x22, 0x3a, 0x0a,
	0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x25, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x5d, 0x0a, 0x15, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x41, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x27, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x96, 0x02, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e,
	0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x42, 0x6f, 0x73, 0x73, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x42, 0x6f,
	0x73, 0x73, 0x49, 0x44, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x49, 0x0a, 0x0f, 0x53, 0x68, 0x65,
	0x6c, 0x66, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x42, 0x6f, 0x73, 0x73, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x42, 0x6f,
	0x73, 0x73, 0x49, 0x44, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x68, 0x65, 0x6c, 0x66, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0xc0, 0x02, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x6e, 0x74,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x6f, 0x73, 0x73, 0x49, 0x44, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x42, 0x6f, 0x73, 0x73, 0x49, 0x44, 0x22, 0x13, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x4b, 0x0a, 0x11, 0x53, 0x6f, 0x6c, 0x64, 0x6f, 0x75, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x6f, 0x73, 0x73, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x42, 0x6f, 0x73, 0x73, 0x49, 0x44, 0x22, 0x14, 0x0a,
	0x12, 0x53, 0x6f, 0x6c, 0x64, 0x6f, 0x75, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x4a, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x6f, 0x73, 0x73, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x42, 0x6f, 0x73, 0x73, 0x49, 0x44, 0x22,
	0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0xd8, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x6f, 0x73, 0x73, 0x49,
	0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x42, 0x6f, 0x73, 0x73, 0x49, 0x44, 0x22,
	0x13, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x48, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65,
	0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x63, 0x6b,
	0x69, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x65, 0x63,
	0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x6f, 0x73, 0x73, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x42, 0x6f, 0x73, 0x73, 0x49, 0x44, 0x22, 0x13,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x4f, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x1a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x2f, 0x0a, 0x15, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x46, 0x0a, 0x16, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x08, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x4f, 0x0a, 0x17, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x42, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x0f, 0x53, 0x65,
	0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a,
	0x0b, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x63,
	0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x0b, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x30, 0x0a, 0x10, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c,
	0x6c, 0x49, 0x44, 0x22, 0x41, 0x0a, 0x11, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x35, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x22, 0x34, 0x0a,
	0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x22, 0x35, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x6b,
	0x69, 0x6c, 0x6c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x44, 0x22, 0x34, 0x0a, 0x16, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x22, 0x2f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x44, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x49, 0x44, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x4c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0b, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x32,
	0xc0, 0x0b, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x63,
	0x61, 0x72, 0x6f, 0x75, 0x73, 0x65, 0x6c, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x72,
	0x6f, 0x75, 0x73, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61,
	0x72, 0x6f, 0x75, 0x73, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x14, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3c, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39,
	0x0a, 0x0c, 0x73, 0x68, 0x65, 0x6c, 0x66, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x13,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x68, 0x65, 0x6c, 0x66, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x68, 0x65, 0x6c, 0x66, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x73, 0x6f, 0x6c, 0x64, 0x6f,
	0x75, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x6f, 0x6c, 0x64, 0x6f, 0x75, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x6c, 0x64, 0x6f, 0x75, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65,
	0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a,
	0x0d, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c,
	0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x19,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x19, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_product_proto_rawDescOnce sync.Once
	file_product_proto_rawDescData = file_product_proto_rawDesc
)

func file_product_proto_rawDescGZIP() []byte {
	file_product_proto_rawDescOnce.Do(func() {
		file_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_product_proto_rawDescData)
	})
	return file_product_proto_rawDescData
}

var file_product_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_product_proto_goTypes = []interface{}{
	(*SmallProduct)(nil),             // 0: pb.SmallProduct
	(*SmallSeckill)(nil),             // 1: pb.SmallSeckill
	(*Product)(nil),                  // 2: pb.Product
	(*SeckillProduct)(nil),           // 3: pb.SeckillProduct
	(*Comment)(nil),                  // 4: pb.Comment
	(*Carousel)(nil),                 // 5: pb.Carousel
	(*CarouselReq)(nil),              // 6: pb.CarouselReq
	(*CarouselResp)(nil),             // 7: pb.CarouselResp
	(*Category)(nil),                 // 8: pb.Category
	(*CategoryListReq)(nil),          // 9: pb.CategoryListReq
	(*CategoryListResp)(nil),         // 10: pb.CategoryListResp
	(*RecommendReq)(nil),             // 11: pb.RecommendReq
	(*RecommendResp)(nil),            // 12: pb.RecommendResp
	(*SearchProductReq)(nil),         // 13: pb.SearchProductReq
	(*SearchProductResp)(nil),        // 14: pb.SearchProductResp
	(*CategoryProductListReq)(nil),   // 15: pb.CategoryProductListReq
	(*CategoryProductListResp)(nil),  // 16: pb.CategoryProductListResp
	(*ProductDetailReq)(nil),         // 17: pb.ProductDetailReq
	(*ProductDetailResp)(nil),        // 18: pb.ProductDetailResp
	(*ProductCommentListReq)(nil),    // 19: pb.ProductCommentListReq
	(*ProductCommentListResp)(nil),   // 20: pb.ProductCommentListResp
	(*CreateProductReq)(nil),         // 21: pb.CreateProductReq
	(*CreateProductResp)(nil),        // 22: pb.CreateProductResp
	(*ShelfProductReq)(nil),          // 23: pb.ShelfProductReq
	(*ShelfProductResp)(nil),         // 24: pb.ShelfProductResp
	(*UpdateProductReq)(nil),         // 25: pb.UpdateProductReq
	(*UpdateProductResp)(nil),        // 26: pb.UpdateProductResp
	(*SoldoutProductReq)(nil),        // 27: pb.SoldoutProductReq
	(*SoldoutProductResp)(nil),       // 28: pb.SoldoutProductResp
	(*DeleteProductReq)(nil),         // 29: pb.DeleteProductReq
	(*DeleteProductResp)(nil),        // 30: pb.DeleteProductResp
	(*CreateSeckillReq)(nil),         // 31: pb.CreateSeckillReq
	(*CreateSeckillResp)(nil),        // 32: pb.CreateSeckillResp
	(*DeleteSeckillReq)(nil),         // 33: pb.DeleteSeckillReq
	(*DeleteSeckillResp)(nil),        // 34: pb.DeleteSeckillResp
	(*CreateCollectProductReq)(nil),  // 35: pb.CreateCollectProductReq
	(*CreateCollectProductResp)(nil), // 36: pb.CreateCollectProductResp
	(*CollectProductListReq)(nil),    // 37: pb.CollectProductListReq
	(*CollectProductListResp)(nil),   // 38: pb.CollectProductListResp
	(*DeleteCollectProductReq)(nil),  // 39: pb.DeleteCollectProductReq
	(*DeleteCollectProductResp)(nil), // 40: pb.DeleteCollectProductResp
	(*SeckillListReq)(nil),           // 41: pb.SeckillListReq
	(*SeckillListResp)(nil),          // 42: pb.SeckillListResp
	(*SeckillDetailReq)(nil),         // 43: pb.SeckillDetailReq
	(*SeckillDetailResp)(nil),        // 44: pb.SeckillDetailResp
	(*CheckProductExistsReq)(nil),    // 45: pb.CheckProductExistsReq
	(*CheckProductExistsResp)(nil),   // 46: pb.CheckProductExistsResp
	(*CheckSeckillExistsReq)(nil),    // 47: pb.CheckSeckillExistsReq
	(*CheckSeckillExistsResp)(nil),   // 48: pb.CheckSeckillExistsResp
	(*GetProductListByIDReq)(nil),    // 49: pb.GetProductListByIDReq
	(*GetProductListByIDResp)(nil),   // 50: pb.GetProductListByIDResp
}
var file_product_proto_depIdxs = []int32{
	5,  // 0: pb.CarouselResp.Carousels:type_name -> pb.Carousel
	8,  // 1: pb.CategoryListResp.Categories:type_name -> pb.Category
	0,  // 2: pb.RecommendResp.SmallProducts:type_name -> pb.SmallProduct
	0,  // 3: pb.SearchProductResp.SmallProducts:type_name -> pb.SmallProduct
	0,  // 4: pb.CategoryProductListResp.SmallProducts:type_name -> pb.SmallProduct
	2,  // 5: pb.ProductDetailResp.Product:type_name -> pb.Product
	4,  // 6: pb.ProductCommentListResp.Comments:type_name -> pb.Comment
	0,  // 7: pb.CollectProductListResp.Products:type_name -> pb.SmallProduct
	1,  // 8: pb.SeckillListResp.SeckillList:type_name -> pb.SmallSeckill
	3,  // 9: pb.SeckillDetailResp.Product:type_name -> pb.SeckillProduct
	0,  // 10: pb.GetProductListByIDResp.ProductList:type_name -> pb.SmallProduct
	6,  // 11: pb.product.carousel:input_type -> pb.CarouselReq
	9,  // 12: pb.product.categoryList:input_type -> pb.CategoryListReq
	11, // 13: pb.product.recommend:input_type -> pb.RecommendReq
	13, // 14: pb.product.searchProduct:input_type -> pb.SearchProductReq
	15, // 15: pb.product.categoryProductList:input_type -> pb.CategoryProductListReq
	17, // 16: pb.product.productDetail:input_type -> pb.ProductDetailReq
	19, // 17: pb.product.productCommentList:input_type -> pb.ProductCommentListReq
	21, // 18: pb.product.createProduct:input_type -> pb.CreateProductReq
	23, // 19: pb.product.shelfProduct:input_type -> pb.ShelfProductReq
	25, // 20: pb.product.updateProduct:input_type -> pb.UpdateProductReq
	27, // 21: pb.product.soldoutProduct:input_type -> pb.SoldoutProductReq
	29, // 22: pb.product.deleteProduct:input_type -> pb.DeleteProductReq
	31, // 23: pb.product.createSeckill:input_type -> pb.CreateSeckillReq
	33, // 24: pb.product.deleteSeckill:input_type -> pb.DeleteSeckillReq
	35, // 25: pb.product.createCollectProduct:input_type -> pb.CreateCollectProductReq
	37, // 26: pb.product.collectProductList:input_type -> pb.CollectProductListReq
	39, // 27: pb.product.deleteCollectProduct:input_type -> pb.DeleteCollectProductReq
	41, // 28: pb.product.seckillList:input_type -> pb.SeckillListReq
	43, // 29: pb.product.seckillDetail:input_type -> pb.SeckillDetailReq
	45, // 30: pb.product.checkProductExists:input_type -> pb.CheckProductExistsReq
	47, // 31: pb.product.checkSeckillExists:input_type -> pb.CheckSeckillExistsReq
	49, // 32: pb.product.getProductListByID:input_type -> pb.GetProductListByIDReq
	7,  // 33: pb.product.carousel:output_type -> pb.CarouselResp
	10, // 34: pb.product.categoryList:output_type -> pb.CategoryListResp
	12, // 35: pb.product.recommend:output_type -> pb.RecommendResp
	14, // 36: pb.product.searchProduct:output_type -> pb.SearchProductResp
	16, // 37: pb.product.categoryProductList:output_type -> pb.CategoryProductListResp
	18, // 38: pb.product.productDetail:output_type -> pb.ProductDetailResp
	20, // 39: pb.product.productCommentList:output_type -> pb.ProductCommentListResp
	22, // 40: pb.product.createProduct:output_type -> pb.CreateProductResp
	24, // 41: pb.product.shelfProduct:output_type -> pb.ShelfProductResp
	26, // 42: pb.product.updateProduct:output_type -> pb.UpdateProductResp
	28, // 43: pb.product.soldoutProduct:output_type -> pb.SoldoutProductResp
	30, // 44: pb.product.deleteProduct:output_type -> pb.DeleteProductResp
	32, // 45: pb.product.createSeckill:output_type -> pb.CreateSeckillResp
	34, // 46: pb.product.deleteSeckill:output_type -> pb.DeleteSeckillResp
	36, // 47: pb.product.createCollectProduct:output_type -> pb.CreateCollectProductResp
	38, // 48: pb.product.collectProductList:output_type -> pb.CollectProductListResp
	40, // 49: pb.product.deleteCollectProduct:output_type -> pb.DeleteCollectProductResp
	42, // 50: pb.product.seckillList:output_type -> pb.SeckillListResp
	44, // 51: pb.product.seckillDetail:output_type -> pb.SeckillDetailResp
	46, // 52: pb.product.checkProductExists:output_type -> pb.CheckProductExistsResp
	48, // 53: pb.product.checkSeckillExists:output_type -> pb.CheckSeckillExistsResp
	50, // 54: pb.product.getProductListByID:output_type -> pb.GetProductListByIDResp
	33, // [33:55] is the sub-list for method output_type
	11, // [11:33] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_product_proto_init() }
func file_product_proto_init() {
	if File_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmallProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmallSeckill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeckillProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Carousel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarouselReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarouselResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryProductListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryProductListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCommentListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCommentListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShelfProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShelfProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoldoutProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoldoutProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSeckillReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSeckillResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSeckillReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSeckillResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCollectProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCollectProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectProductListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectProductListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCollectProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCollectProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeckillListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeckillListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeckillDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeckillDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckProductExistsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckProductExistsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckSeckillExistsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckSeckillExistsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductListByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductListByIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   51,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_product_proto_goTypes,
		DependencyIndexes: file_product_proto_depIdxs,
		MessageInfos:      file_product_proto_msgTypes,
	}.Build()
	File_product_proto = out.File
	file_product_proto_rawDesc = nil
	file_product_proto_goTypes = nil
	file_product_proto_depIdxs = nil
}
