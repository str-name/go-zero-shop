// Code generated by goctl. DO NOT EDIT.
// Source: order.proto

package server

import (
	"context"

	"zero-shop/order/rpc/internal/logic"
	"zero-shop/order/rpc/internal/svc"
	"zero-shop/order/rpc/pb"
)

type OrderServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedOrderServer
}

func NewOrderServer(svcCtx *svc.ServiceContext) *OrderServer {
	return &OrderServer{
		svcCtx: svcCtx,
	}
}

func (s *OrderServer) CreateProductOrder(ctx context.Context, in *pb.CreateProductOrderReq) (*pb.CreateOrderResp, error) {
	l := logic.NewCreateProductOrderLogic(ctx, s.svcCtx)
	return l.CreateProductOrder(in)
}

func (s *OrderServer) CreateSeckillOrder(ctx context.Context, in *pb.CreateSeckillOrderReq) (*pb.CreateOrderResp, error) {
	l := logic.NewCreateSeckillOrderLogic(ctx, s.svcCtx)
	return l.CreateSeckillOrder(in)
}

func (s *OrderServer) OrderList(ctx context.Context, in *pb.OrderListReq) (*pb.OrderListResp, error) {
	l := logic.NewOrderListLogic(ctx, s.svcCtx)
	return l.OrderList(in)
}

func (s *OrderServer) OrderDetail(ctx context.Context, in *pb.OrderDetailReq) (*pb.OrderDetailResp, error) {
	l := logic.NewOrderDetailLogic(ctx, s.svcCtx)
	return l.OrderDetail(in)
}

func (s *OrderServer) DeleteOrder(ctx context.Context, in *pb.DeleteOrderReq) (*pb.DeleteOrderResp, error) {
	l := logic.NewDeleteOrderLogic(ctx, s.svcCtx)
	return l.DeleteOrder(in)
}

func (s *OrderServer) UpdateOrderStatus(ctx context.Context, in *pb.UpdateOrderStatusReq) (*pb.UpdateOrderStatusResp, error) {
	l := logic.NewUpdateOrderStatusLogic(ctx, s.svcCtx)
	return l.UpdateOrderStatus(in)
}

// other
func (s *OrderServer) GetOrderOnlyDetail(ctx context.Context, in *pb.GetOrderOnlyDetailReq) (*pb.GetOrderOnlyDetailResp, error) {
	l := logic.NewGetOrderOnlyDetailLogic(ctx, s.svcCtx)
	return l.GetOrderOnlyDetail(in)
}
